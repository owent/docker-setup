services:
  unifi-network-application:
    image: lscr.io/linuxserver/unifi-network-application:latest
    # image: docker.io/linuxserver/unifi-network-application:latest
    container_name: unifi-network-application
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Shanghai
      - MONGO_USER=unifi
      - MONGO_PASS=
      - MONGO_HOST=unifi-db
      - MONGO_PORT=27017
      - MONGO_DBNAME=unifi
      - MONGO_AUTHSOURCE=admin
      - MEM_LIMIT=1024 #optional
      - MEM_STARTUP=1024 #optional
      - MONGO_TLS= #optional
    volumes:
      - ./data/unifi-network-application:/config
    ports:
      - 6543:8443 # Unifi web admin port
      - 3478:3478/udp # Unifi STUN port
      - 10001:10001/udp # Required for AP discovery
      - 8080:8080 # Required for device communication
      - 1900:1900/udp # Required for Make controller discoverable on L2 network option
      - 8843:8843 # Unifi guest portal HTTPS redirect port
      - 8880:8880 # Unifi guest portal HTTP redirect port
      - 6789:6789 # For mobile throughput test
      - 5514:5514/udp # Remote syslog port
    networks:
      - frontend
      - backend
    restart: unless-stopped
  unifi-db:
    image: docker.io/mongo:latest
    container_name: unifi-db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=
      - MONGO_USER=unifi
      - MONGO_PASS=
      - MONGO_DBNAME=unifi
      - MONGO_AUTHSOURCE=admin
    volumes:
      - ./data/mongo:/data/db
      - ./init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
    networks:
      - frontend
      - backend
    restart: unless-stopped
networks:
  frontend:
    name: internal-frontend
    external: true
  backend:
    name: internal-backend
    external: true
