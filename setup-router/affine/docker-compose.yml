name: affine
services:
  affine:
    image: ghcr.io/toeverything/affine-graphql:${AFFINE_REVISION:-stable}
    container_name: affine-server
    ports:
      - "${PORT:-3010}:3010"
    depends_on:
      affine_migration:
        condition: service_completed_successfully
    volumes:
      # custom configurations
      - ${UPLOAD_LOCATION}:/root/.affine/storage
      - ${CONFIG_LOCATION}:/root/.affine/config
    env_file:
      - .env
    environment:
      - REDIS_SERVER_HOST=${REDIS_SERVER_HOST:-redis}
      - REDIS_SERVER_PORT=${REDIS_SERVER_PORT}
      - REDIS_SERVER_USER=${REDIS_SERVER_USER}
      - REDIS_SERVER_PASSWORD=${REDIS_SERVER_PASSWORD}
      - REDIS_SERVER_DATABASE=${REDIS_SERVER_DATABASE}
      - MAILER_HOST=${MAILER_HOST}
      - MAILER_PORT=${MAILER_PORT}
      - MAILER_USER=${MAILER_USER}
      - MAILER_PASSWORD=${MAILER_PASSWORD}
      - MAILER_SENDER=${MAILER_SENDER}
      - MAILER_IGNORE_TLS=${MAILER_IGNORE_TLS}
      - DATABASE_URL=postgresql://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST:-postgres}:${DB_PORT:-5432}/${DB_DATABASE:-affine}
    networks:
      - frontend
      - backend
    restart: unless-stopped

  affine_migration:
    image: ghcr.io/toeverything/affine-graphql:${AFFINE_REVISION:-stable}
    container_name: affine-migration-job
    volumes:
      # custom configurations
      - ${UPLOAD_LOCATION}:/root/.affine/storage
      - ${CONFIG_LOCATION}:/root/.affine/config
    command: ["sh", "-c", "node ./scripts/self-host-predeploy.js"]
    env_file:
      - .env
    environment:
      - REDIS_SERVER_HOST=${REDIS_SERVER_HOST:-redis}
      - REDIS_SERVER_PORT=${REDIS_SERVER_PORT}
      - REDIS_SERVER_USER=${REDIS_SERVER_USER}
      - REDIS_SERVER_PASSWORD=${REDIS_SERVER_PASSWORD}
      - REDIS_SERVER_DATABASE=${REDIS_SERVER_DATABASE}
      - MAILER_HOST=${MAILER_HOST}
      - MAILER_PORT=${MAILER_PORT}
      - MAILER_USER=${MAILER_USER}
      - MAILER_PASSWORD=${MAILER_PASSWORD}
      - MAILER_SENDER=${MAILER_SENDER}
      - MAILER_IGNORE_TLS=${MAILER_IGNORE_TLS}
      - DATABASE_URL=postgresql://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST:-postgres}:${DB_PORT:-5432}/${DB_DATABASE:-affine}
    networks:
      - frontend
      - backend
  affine_pgadmin:
    container_name: "affine-pgadmin"
    restart: on-failure
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      - frontend
      - backend
networks:
  frontend:
    name: internal-frontend
    external: true
  backend:
    name: internal-backend
    external: true
